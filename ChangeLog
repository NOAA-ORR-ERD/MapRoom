04/17/2018
---------------------------
Released 4.0rc4
- RM Refs #595: changed test to match changes in test particle file
- RM Removed debug print about point hiding
- RM updated version prerequisites for wxpython and omnivore
- RM Fixed #870: save/load scalar expression to project file
- RM Refs #870: moved scalar expression into info panel
- RM Refs #870: fixed partical subset expressions to handle floating point with leading dot
- RM Refs #870: added basic algorithmic selection
- RM Fixed project load error & remove sample data for hidden points
- RM Fixed #879: BNA layers not clickable unless they are the selected layer
- RM Fixed #882: added check for window opening flag when creating a new task, and if so don't create a blank document so the default template can be loaded
- CB updated particle file examples from latest GNOME1
- RM Refs #870: added hidden_points array to PointBaseLayer
- RM Added positioning, size for compass rose

04/15/2018
---------------------------
Released 4.0rc3
- RM Fixed colormap legend bins on initial load with a builtin discrete colormap
- RM Fixed nc_particles loader test to handle the additional returned vars in the tuple
- RM Removed debug prints or changed to calls to log.debug
- RM Fixed deprecated call to wx.BitmapFromImage
- RM Fixed #869: corrected call to ListedBoundedColormap
- RM Fixed #877: added layer name to final component of zip directory path
- RM Refs #869: fixed autoscale in dialog
- RM Refs #869: added autoscale param to discrete colormaps to determine whether or not to scale the colormap when changing the scalar value
- RM WIP scaling buttons
- RM Refs #869: put bin controls in scrolled window in DiscreteColormapDialog
- RM Refs #869: still working on colormap serialization
- RM math_utils: added bounds check to prevent log of zero
- RM Refs #869: WIP json serialization of colormaps
- RM Refs #869: added colormap registration into user defined colormap dictionary
- RM Fixed #874: removed leading/trailings blanks from input to lat_lon_parser
- RM Fixed #875: added check for mouse capture before attempting to release the mouse
- RM Refs #869: added round_minimum_unique_digits to math_utils to produce nicely formatted legend bin values
- RM Refs #869: WIP colormap scaling
- RM Refs #869: better background color for calc_bitmap
- RM Refs #869: restructured discrete colormap dialog to use less vertical space
- RM Refs #869: added arrows in combobox image for rgba under/over
- RM Fixed #873: added cumulative path length for polyline/polygon creation
- RM Refs #869: added arrows on colorbar when there are over or under colors
- RM Refs #869: DiscreteColormapDialog can now handle being called with an unknown colormap name
- RM Refs #869: added bitmap updating on bin color change
- RM Refs #869: added text validation & updating of colormap
- RM Refs #869: added bitmap view of current colormap
- RM Refs #869: added buttons to add/remove colormap entries
- RM Added basic design of colormap editor
- RM Refs #869: added beginnings of discrete colormap dialog
- RM Refs #869: refactored colormap combobox to separate discrete and continuous colormaps
- RM Fixed #865: overlay line should have been using screen deltas to compute screen-space point when world-space point was moved
- RM Fixed #872: only update particle status code count when loading point data
- RM Changed info panel so colormap/status_codes selection only shows each as appropriate
- RM Fixed #871: moved legend to its own layer
- RM Fixed #868: also remove bogus indexes from scalar var arrays
- RM Removed some development print statements
- RM Select first new layer when loading a new file
- RM Added background to legend
- RM Fixed #857: added legend with colormap and labels for scalar values
- RM Added missing colormap ui file
- RM Refs #857: initial code for legend box showing current colormap
- RM Refs #857: fixed colormap when changing back to status code coloring
- RM Refs #857: add min/max calculation of scalar vars at load time
- RM Added ui to adjust point size for particle layers
- RM Refs #636: fixed initial position of sliders
- RM Fixed #636: added simple positioning sliders for scale
- RM json: turned off dialog display of warnings that items were missing from the json file
- RM Refs #857: added colormap to info_panels
- RM Fixed json serialization of numpy arrays in scalar_vars
- RM Added colormap name as particle layer trait and default name in preferences
- RM Added convenience function get_bitmap_from_numpy
- RM Added standalone test window to display the default style dialog
- RM Refs #857: Added matplotlib colormap code (without any matplotlib dependencies)
- RM Added json sanity check to allow layers to recreate any data that wasn't restored with the from_json routines
- RM Refs #857: added particle scalar summary info to popup status text
- RM Refs #857: renamed contour to scalar
- RM Refs #857: added contour menu to particle folders that affects all particle layers below it
- RM Refs #857: basic contouring for single particle layer
- RM Fixed #849: added project, layer manager, layer canvas, and command history to each exception report listing
- RM Fixed #852: added error message when no particle data found
- RM Refs #861: anchor point currently being dragged is now displayed in selection_info_panel instead of always the anchor point
- RM Fixed #853: don't show status codes names if no particles of that type in layer
- RM Fixed #862, #863: fixed incorrect scaling of int color values that fixes both issues
- RM Fixed #850: PanMode is now default after loading a file
- RM Fixed resize of child layers when moving a bounding box point of a parent layer
- RM Fixed #855: fixed fit_to_bounding_box regression for PolylineMixin
- RM Fixed #858: worked around inability for bitmaps in buttons to show alpha
- RM Refs #858: transparency sliders for object colors are no longer needed with use of CubeColourDialog
- RM Fixed #856: replaced platform-specific color selector with CubeColourSelector in wx.lib.agw
- CB added example file from GNOME 1
- RM Fixed #851: added check for degenerate size text box before rendering

12/22/2017
---------------------------
Released 4.0rc2
- RM Added preference for blinking the selected layer
- RM Fixed #744: selecting a particle layer flags the points for 1000ms
- RM Fixed #842: added new SelectionMode base class
- RM Fixed #844: added missing hidden dependency on traitsui.wx
- RM Fixed #843: fixed incorrect variable name
- RM Fixed error in time step panel attempting to set rate of project with no timestamped layers
- RM file_type: fixed binary zipfile load attempt using bytes as URI
- RM Fixed #835: added interval calculation to set initial playback rate
- RM Refs #835: project save files now include step rate/value and position of timeline
- RM timeline: fixed timeline marks being out of sync because of a refresh called in the middle of load_omnivore_document
- RM Fixed #838: project files now store viewport info so the same location & zoom are restored on project load
- RM file_type: added checks for file appearing like it's a text file before trying these recognizers
- RM Fixed #781: added text file import & SwapLatLonCommand to flip axes if recognized incorrectly
- RM Refs #781: added initial import of text files
- RM Fixed #834: turned playback rate popup into a dialog
- RM Fixed #839: added opaque and background flags to layers
- RM Fixed #836: text should not be drawn in the picker framebuffer
- RM Changed control point names to center bottom, center right, etc.
- RM Fixed shapefile trying to look at particle times for start times
- RM Added default_project.maproom template to pyinstaller build

12/11/2017
---------------------------
Released 4.0rc1
- RM Updated tests to remove initial_layers keyword arg from layer manager creation
- RM Added submenu to list known templates for creating new project
- RM Added menu item to save current project as a template for later reuse
- RM Refs #785: fixed non-project files being loaded into new tabs instead into a project
- RM Refs #834: attempts to fix focus issue on Mac
- RM Fixed #833: added wrapper around OpenGL context creation to hopefully catch the problem.
- RM MacOS: fixed crash when loading default project. Needed CallAfter
- RM Fixed #785: if application is still in init process, allow notebook tab to be replaced
- RM Refs #785: added new menu item to open default project along with empty project
- RM Added popup to set step rate & step value for playback
- RM timeline: fixed play button to be enabled only when there are events in the timeline
- RM Fixed save action to be disabled on a read-only file (like the default template)
- RM Refs #800: added zipfile abstraction fixes to allow load from template
- RM Refs #833: removed some debug prints
- RM Refs #833: WIP to make the default file load from a template instead of hardcoding into LayerManager
- RM Refs #833: added kwargs to MaproomProjectTask.new to handle window_opening flag
- RM Refs #833: WIP debugging application initialization
- RM Fixed bad reference to parent class
- RM Refs #818: fixed layer visibility due to range select of timeline
- RM Fixed #818: add playback that turns on and off layers using current time, start time and end time
- RM Fixed timeline not being updated when loading a project file
- RM Refs #818: added basic functionality for play/pause using timeline
- RM Refs #816: handle change in mark data with zoomruler now supporting end timestamps
- RM Refs #816: default end time of particle layer is start time of subsequent timestep
- RM Added time range to __str__ of layers
- RM Changed calls to status bar to follow new usage in framework
- RM added a few missing attribute initialization calls to picker
- RM Fixed #826: freeze/thaw around the OpenGL canvas flickers on windows
- RM Moved to versioning utilities from packaging because it can support "rc" versions

11/16/2017
---------------------------
Released 3.1b39
- RM Don't load initial layers in the mock layer manager
- RM Fixed test cases to add default value for serialized commands if loading old version of command log
- RM Replaced deprecated call to wx.EmptyBitmap
- RM Removed some debug prints
- RM Refs #799: fixed arrow text icon object so the icon remains the same size regardless of parent scaling
- RM Refs #799: flagged anchor point is no longer displayed for arrow + text objects
- RM Added immediately flag for rendering so non-windows can get fast dynamic updating on control point movement
- RM Refs #799: Fixed movement of control point 1 on line
- RM Fixed #817: added fit_to_bounding_box to force sublayers to fit correctly
- RM rect: added copy and get_transform, updated point_base to use
- RM Fixed #821: points in a shapefile are now added in a separate layer
- RM Fixed #787: added check for LineString in polygon highlighting
- RM Fixed #820: ungroupable layers (graticule, tile, etc.) are added at the bottom
- RM Changed "grid" to "graticule"
- RM Fixed #819: added check to see if mouse move would highlight the same polygon and skip refresh if so
- RM Fixed #769: added delay before calling refresh_callback, necessary for Windows
- RM Refs #769: added wx callback & counter for render call to eliminate multiple redraws
- RM Refs #769: added debug print to show each rendering call
- RM Refs #787: remove prints, added logging
- RM Refs #802: added select_initial_layer to layer tree control & call it when loading a file or on a blank document
- RM toolbar: fixed intermediate trait errors by using omnivore's replacement EditorAction
- RM docs: added step-by-step description of how a file is loaded
- RM Fixed unicode error with tree editing when label is marked with the unicode symbol for a grouped layer
- RM Fixed #815: needed to force removal of locked control point
- RM layer_tree_control: check that we're actually on an item before attempting to rename
- RM layer_tree_control: fixed segfault when customtreectrl text edit loses focus
- RM Refs #799: picker now selects parent object by default
- RM Ref #799: fixed arrow text box layer to update screen when editing text for its text sublayer
- RM Added more commands to layer tree context menu
- RM Refs #799: Added LayerAction to use the framework's new on_popup_menu_update
- RM Refs #799: better menu item titles for group/ungroup
- RM Refs #799: Fixed missing layer argument to group/ungroup children
- RM Fixed #814: removed layer name from info panel
- RM Fixed #813: added last loaded and saved dirs in omnivore framework
- RM Fixed #763: added rename to popup menu
- RM Refs #763: added context menu to layer_tree_control with group/ungroup
- RM Refs #799: added toolbar items for grouping/ungrouping annotation layers
- RM layers: added pretty_name property that adds a symbol before grouped layers
- RM vector_object_command: Fixed missing logger
- RM Refs #813: added placeholder default dir/filename for save as
- RM Fixed #812: moved call to FileDialog into project_editor; added check for blank filename
- RM Refs #799: default expansion state of grouped objects is collapsed
- RM Fixed #811: made RNC loader layer more transparent
- RM Corrected load_bna_as_shapely to have default regime of 0
- RM Refs #799: exclude icon in boundary rect calculation for ArrowTextIconLayer
- RM Refs #799: added (not default yet, though) picker that selects parent objects when a grouped sub-object is selected
- RM Refs #799: arrow text compound objects start collapsed in the tree list
- RM Fixed #810: changed default annotation layer to start as the top layer
- RM layers: 'grouped' attribute not being saved/restored from json
- RM Refs #799: added text editing to folder layer of the arrow text box & arrow text icon objects
- RM Refs #799: added user friendly names for control points
- RM Fixed #774: anchor point now moves the connected line in text/line combo vector objects
- RM Fixed #806: added new menu item to load RNC downloader chart in the 0 - 360 range
- RM Fixed #805: added duplicate chart (a GDAL image) in the 0 - 360 range
- RM Fixed #768: added border width parameter to text vector objects

10/30/2017
---------------------------
Released 3.1b38
- RM Fixed project save tests to handle zip file projects
- RM Fixed #803: fixed some missing handling of negative tile numbers
- RM Fixed error when saving over an existing file; was attempting to use regular file open with a URL
- RM Catch general exception in save_all_zip
- RM Fixed #801: extra call to GetDefaultAttributes in get_error_text was causing a segfault

10/26/2017
---------------------------
Released 3.1b37
- RM Added preferences to mock project to handle new initial layers in layer manager
- RM Fixed #797: annotation & tile layer added when creating new project
- RM Fixed #794: restructured toolbar so select mode is first
- RM Removed cursor changes due to mouse handler panning because it's now handled through the PanMode or the effective mode
- RM Removed obsolete text description of mouse usage
- RM Refs #794: made pan mode available in all toolbars
- RM Fixed #795: make sure effective mode is panning before actually panning in process_mouse_motion_down
- RM Fixed #791: added at_lon_parser and unit_conversion from NOAA_ORR_ERD github
- RM Refs #791: split out lat/long into separate text entry boxes
- RM Removed version limiter on shapely; 1.5.x won't compile with numpy 1.13
- RM Fixed #792: re-added workaround for macos to intercept delete key menu item and check if actually in a text control
- RM Updated setup to require wxpython 4 and latest omnivore framework
- RM Fixed #789: parent of deleted layer may be a folder, so find an actual layer when choosing which new layer to select in the tree control
- RM Refs #789: also clear out text part of combo button when particle folder has no children
- RM Refs #789: Handle degenerate case of particle folder with no children
- RM Fixed #790: before EnsurePosition will work after deleting all items, need call to CalculatePositions
- RM Fixed #788: ignore everything but outline color in particle layer style change
- RM Refs #729: Added checkbox on style dialog to apply styles to existing layers
- RM Refs #729: added style default for particle layer
- RM Refs #787: added sample shapefiles to TestData
- RM Updated minimum required Omnivore framework to reflect the need for wx4 support
- RM Fixed #782, #783: some metadata wasn't being restored when loading images
- RM Refs #783: Added debugging command to show layer manager info
- RM Fixed #779: middle mouse/left button + alt = pan, regardless of mode
- RM Simplified build process; running installdeps.py not required if using omnivore-framework
- RM wx4: fixed ComboBox for Phoenix API
- RM Stubbed out TimelineAction, which doesn't exist yet
- RM Added netcdf summary in particles test
- RM Added check for wxPython phoenix when finalizing app
- RM Added cleanup function for zipfiles opened during project load
- RM Added explicit call to stop threads in all downloaders rather than relying on instance garbage collection
- RM Fixed #778: got round-trip load/save working
- RM Removed dynamic trait on active_editor.mouse_mode_toolbar to remove 2 trait warnings on exit
- RM Refs #778: first attempt at saving images in zip files
- RM Added rudimentary tests for comparing maproom project save files
- RM Added pyface toolkit hack to force loading wx during unit tests
- RM Refs #778: added zipped project file to tests
- RM Refs #778: added zipfile storage of maproom project file, loading/saving non-image layers
- RM Fix for whitespace changes introduced in 0d286c1 that messed up cog script
- RM GLCanvas fails on Mac randomly when WX_GL_MIN_ALPHA is specified
- RM wx color change events now include alpha
- RM GetContext apparently not available in wx4; check for initialized instead
- RM Use Bitmap, Image constructors instead of old From functions
- RM Alpha unnecessary for colors returned by color select events
- RM StockCursor -> Cursor
- RM Fixed tree method renaming: GetItemPyData(...).Data -> GetItemData
- RM numpy on python 2 doesn't support memoryview, so have to convert image to numpy array using copy of data
- RM Initial wx4 conversion
- RM updated pytriangle C source as generated by Cython 0.26
- RM Added optimization to C compiler arguments
- RM fixed build script to call python version of build_installer
- RM Added shapley version check and netCDF4 (which is available through wheels on windows!)
- RM Workaround for pip install using 'pytest-cov' when searching for 'pytest'
- RM updated version number to 3.1b36
- RM Fixed incorrect get_image_path for relative path
- RM updated setup.py for omnivore-framework
- RM Moved open source dependencies to omnivore-framework
- RM Fixes for setuptools over distutils and windows git checkout
- RM Changes to link/develop preferences for windows install
- RM refactoring: changed name of selected_layer* functions to edit_layer* functions
- RM timeline: added highlight marks for visible layers selected in tree
- RM Replaced localtime with gmtime when converting particle layer timestamps
- RM Refs #769: added more OpenGL version info in Help -> About dialog

06/08/2017
---------------------------
Released 3.1b35
- RM Fixed #767: added missing call to draw markers for overlay line
- RM Added missing checks for valid editor in timeline callbacks
- RM Fixed #772: only consider visibility changes on timestamped layers
- RM Fixed #766: added dateutil parsing of layer name
- RM Changed to full-width highlights in tree. Less mouse movement to select since you don't have to be inside the box
- RM Refs #619: added double click to select only that layer
- RM Fixed installdeps to be able to check out a branch
- RM Refs #619: fixed refresh that was rescaling the timeline
- RM Refs #619: added mouse selection/processing to timeline
- RM Refs #619: added start/stop times to base layer abstract class
- RM Fixed #733: added 9 new colors to default color cycle

06/01/2017
---------------------------
Released 3.1b34
- RM Added missing circle object from styles and reordered to match toolbar
- RM Fixed tests for new default style usage
- RM Fixed #765: use first entry in hosts list if no default WMS server explicitly set
- RM Minor label changes for default style UI
- RM Fixed #643: added option to save defaults for future projects
- RM Removed some debug prints in vector_object_commands
- RM Refs #643: added styling for compound annotation layers
- RM Refs #643: added default styles per layer type
- RM Added check for existence of point before trying to set line color
- RM Removed default debug logging level from host_utils & thread_utils
- RM Fixed release-and-tag script to use correct pyinstaller script

05/30/2017
---------------------------
Released 3.1b33
- RM Fixed #750: added better defaults for download directories
- RM Fixed import change in framework: springtabs -> popuputil
- RM Fixed #749: moved RNC title to web-browser-like popup status bar
- RM Removed unnecessary perspective load, speeding file load & preventing overwrite of pane captions
- RM Layer info pane now puts layer name in title bar
- RM Fixed color button widths in info_panels to be the same width as status code color buttons
- RM Fixed #757: fix to correctly handle recursion with yield statements
- RM Refs #757: after layer delete, select previous sibling (if available)
- RM Refs #757: now handles arbitrarily nested children in lists of lists of lists...
- RM Added self-signed cert for code signing on macOS
- RM Fixed #754: added point labeling for any particle layer when a particle layer is selected
- RM Refs #754: added point labeling for selected particle layer
- RM Moved text generation for clickable object into layer so output can be customized by layer
- RM Fixed #756: convert control point to python int rather than int64
- RM Fixed #753: added default lookup for tile server (and WMS server because it's similar)
- RM Refs #753: added default indicator on WMS manager
- RM Fixed #755: updating the map server ids after the list changes
- RM Refactor: reordered and grouped related methods together in the layer_manager
- RM Refs #753: added visible "default" label for default tile server
- RM Refs #753: added default attribute to hosts
- RM Fixed #752: updated code for new pane subclass from framework
- RM Use new error logger from framework
- RM Fixed #745: changed polygon fill checks to interior checks when clicking
- RM Experimental tree control access by list indexes
- RM Fixed #748: force parent layer to be selected when deleting
- RM Added debug menu item to create sample annotation layer
- RM Added test for gnome particles file with bad data
- RM Added automatic pytest/coverage HTML reports with pytest.ini
- RM Minor test fixes
- RM Fixed pyinstaller builds on conda needing pythonw when running the maproom hook
- RM Fixed app name appearing in Mac menubar with change in framework init code
- RM Fixed MacOS app build
- RM Removed some debug prints

04/22/2017
---------------------------
Released 3.1b32
- RM Updated version to 3.1b32 for windows pyinstaller test
- RM Moved graphic source files into resources directory
- RM Working one-folder and one-file builds for windows
- RM Added missing dependencies from install_requires
- RM Fixed windows support as shared directory view onto linux partition
- RM Updated install instructions for unix
- RM Updated install script to use local copies of enthought and omnivore
- RM Added override so we don't get framework help pages
- RM Fixed #737: handle either 'status_codes' or 'status' when iterating timesteps
- RM Changed view menu groups to sync with framework API changes
- RM Updated get_preferences() to preferences because of API change in framework
- RM Updated file recognizers for change in framework API
- RM Updated sidebar for API change in omnivore
- RM Updated calls to Task.confirm due to change in framework API
- RM Fixed #746: editable_properties_changed now forces refresh of info panel control with focus
- RM Fixed #747: added check for compatible layer in coalesce
- RM Changed get_affected_layers to return all descendants, not just immediate children
- RM Using new child layer command propagation, added styling controls to parent annotation layer
- RM Added outline color/transparency to parent particle layer
- RM StyleChangeCommand now changes child layers
- RM Added default implementations of Command.perform/undo and automatic handling of child layer effects
- RM Refs #729: added controls for point outline color & transparency
- RM Refs #729: changed colors for in water/on land
- RM Fixed pep8 E272
- RM Fixed pep8/flake8 F812
- RM Fixed pep8/flake8 F811 errors
- RM Fixed pep8 E303
- RM Fixed pep8 E266
- RM Fixed pep8 W603
- RM Fixed most of the pep8/flake8 F841 errors
- RM Fixed pep8 E701
- RM Fixed pep8 E703
- RM Fixed pep8 E115
- RM Fixed pep8 E114
- RM Fixed pep8 E401
- RM Fixed pep8 E241, W503
- RM Fixed pep8 E712, E503
- RM Fixed pep8 E251
- RM Fixed pep8 E713: 'not X in Y' is not the same as the intended meaning 'X not in Y'
- RM Fixed pep8 E12, E13
- RM Mostly fixed E231, except for numpy slices which I left mostly without spaces
- RM Fixed pep8 E26
- RM Added noqa to cog scripts; fixing E265 would break cog scripts
- RM Fixed pep8 E22
- RM Fixed E201, E202
- RM Fixed empty except clause
- RM Added pragma for flake8 to skip submodule init files that do a lot of importing but don't use anything they import
- RM Added flake8 pragma to skip linting of the autogenerated marplot icons
- RM Fixed all pyflakes "undefined name" and "import *" warnings
- RM Replaced "from constants import *" with "import state"
- RM Result of find . -name "*.py"|xargs autoflake --in-place --remove-all-unused-imports
- RM Fixed RNCLoader's get_highlight_lines to return list of lists to match up to the current API
- RM PEP8 whitespace fixes using 'autopep8 -i -r --select W29,E30,W39 maproom'
- RM Fixed #741: BNA saving now includes copy of 1st point at the end to close the polygon
- RM Removed duplicate code & refactored BNA loading
- RM Removed some unused imports
- RM Fixed error message return value for bad BNA files
- RM Changed to use Save As Image from the framework
- RM Fixed #740: added suffix to tile edit dialog, automatically check multiple suffixes on verify
- RM Added USGS Topo tile server
- RM Fixed equals check for TileHost

03/07/2017
---------------------------
Released 3.1b31
- RM Fixed #702: MacOS needs a Freeze/Thaw wrapper around the cascade of UI callbacks that result from command processing and the resulting trait handler callbacks
- RM Made host objects sortable
- RM Added URL for new USGS Topo WMS server
- RM Fixed tests for import order and name change of polygons to rings
- RM Force array resize to be integer; maybe something has changed in numpy 1.12 where it isn't cast to an int automatically
- RM If using conda, don't try to install dependencies with setup.py in installdeps.py
- RM Fixed OpenGL include paths for MacOS 10.11
- RM Changed import name from Document to BaseDocument
- RM Added cython exclusion and stripping of binaries to pyinstaller spec file
- RM Added pyinstaller spec file to exclude unneeded tcl/tk
- RM Added error dialog if OpenGL fails to initialize
- RM Added the hardware's OpenGL version to about dialog
- RM Added new mouse mode to select points and move them (but not add or delete)
- RM Changed PanMode to be able to select a layer if over an object
- RM Refs #726: fixed points flashing every time a transient layer point was moved
- RM Refs #726: fixed line splitting in polygon layer
- RM Added convenience function to find point nearest to world point
- RM Fixed transient layer not setting invariant
- RM Fix preventing same layer being processed in batch multiple times
- RM Fixed #734: maproom name and feature code now saved/restored to json
- RM Fixed #735: massive renaming of "polygon" to "ring" to change meaning of polygon

01/11/2017
---------------------------
Released 3.1b30
- RM Updated test_nc_particles
- RM Made fiona an optional package because it won't compile on Windows
- RM Added warning message and remove bogus points when loading particles files
- RM Added polygon number to line state; first step to allow new points in polygon
- RM Refs #726: optimized get_points_of_geometry to coalesce multiple points in the same ring to a single update
- RM Refs #726: fix for editing rings other than the exterior
- RM Refs #726: fix for polygon_identifier getting overridden because it was being inadvertently reused in shapely_to_polygon
- RM Added transient layer helpers: at most 1 transient layer at any time
- RM Refs #726: added serialization for shapefile layer
- RM Refs #726, #646: basic editing of polygon layers
- RM Added command argument to perform_batch_flags
- RM Refs #726: shapely objects list starting point twice to close polygon; MapRoom/OpenGL don't, so correct for this
- RM Refs #726: support holes in editable line layers
- RM Refs #726: first step to editable polygons: convert polygon to line layer so you can use verdat editing tools
- RM Refs #726: added demonstration of polygon highlighting in shapefile
- RM Refs #726: first code for loading BNA as shapely polygons
- RM Added display of number of shapefile objects in PolygonShapefileLayer
- RM Removed attempt at triangle shapefile layer and straight-OGR loader
- RM Refs #726: Added OGR file saving (KML, GeoJSON, ESRI)
- RM Added support to display multiple file types in Save Layer As
- RM Refs #726: added support for basic KML loading; fiona doesn't support KML so had to fall back to OGR
- RM Fixed error messages; errors were being attached to the wrong object
- RM Moved shapefile recognizer ahead of all text recognizers because KML is in XML format
- RM Refs #726: added shapely object-based polygon layer subclass
- RM Refs #726: added experimental shapely-geometry-to-triangle layer
- RM Fixed #732: GL tessellation can handle holes; fixed polygons.group attribute so holes share the same group number as the outer boundary
- RM Fixed undo of NormalizeLongitudeCommand
- RM Fixed #731: added longitude normalization for vector object layers
- RM Fixed shapefile reading to load holes in polygons (note: holes aren't displayed correctly yet, but at least they are parsed)
- RM Refs #638: initial support for saving as shapefile (using OGR)
- RM Only use x & y coordinate in shapefiles; throw away z if exists.
- RM Added test case to accumulator that fails with ValueError even though it's supposed to catch ValueError

12/15/2016
---------------------------
Released 3.1b29
- RM Added missing cacert.pem from requests module that was preventing SSL connections on the py2exe version
- RM Added error string for server error when loading WMS
- RM Refs #372, #726: workaround to support points from shapefiles by creating tiny triangles for each point
- RM Refs #372, #726: workaround to support linestrings even though polygon layer doesn't currently support those
- RM Refs #372, #726: added initial support for loading shapefiles
- RM Refs #731: initial support for longitude normalizing of point-based layers
- RM Fixed #722: Added built-in RNC download template & menu item to bring up download selection layer
- RM Added bsb and download directory preferences for RNC maps
- RM Added sidebar refresh so download count will appear immediately
- RM Fixed zoom bug that would zoom all the way out after loading a layer and setting the zoom to that layer
- RM Added basic RNC downloading
- RM Added KAP extractor from BSB zipfiles
- RM Added argument parser to RNC parser
- RM Refs #722: added display of RNC number/name when hovering over chart
- RM Refs #722: added url for each map
- CB fixed link to download page to use "gitlab.orr.noaa.gov"
- RM NetCDF installed by Gohlke package on windows, not via gattai
- RM Updated version number for pending next release
- RM Refs #722: created new mouse mode for RNC selection
- RM Refs #722: added highlighting for map outlines
- RM Fixed #723: added test image for geo-referenced PNG file
- RM Refs #723: added support for RGBA images in gdal loader
- RM Added preference for pixel spacing of grid lines
- RM Refs #722: added special subclass of PolygonLayer to display custom BNA files for RNC selector map
- RM Modified cog script to include current dir in python search path to pick up local gdal.py needed by bsb.py
- RM Added polygon identification for mouse-overs
- RM Refs #722: finished enough XML parsing to create BNA converter
- RM Refs #722: Added initial parses for RNC XML files

09/23/2016
---------------------------
Released 3.1b28
- RM Change release generator to pyinstaller rather than py2app
- RM Added hacked py.test script for conda environment
- RM Downgrade pyugrid to my version until I figure out what's incompatible with conda version
- RM Fix for GDAL 2 returning None instead of raising exception when can't decode image file
- RM Fixed off-by-one error in BNA color feature codes
- RM Fixed API change in MergeLayersCommand
- RM Fixed nc particles tests for changed files and new API
- CB added abiity to read either "status" or "status_codes" in nc_particles layer
- CB changes "status" to "status_codes" in teh n cparticles files, for compatibility with the new GNOME
- RM Added win64 side-by-side config for GDAL 2
- RM Hack for really weird locale error only on macOS, and only when running py.test
- RM Need better way to check if we're using conda... Doesn't seem to be a standard way
- RM updated pillow, omnivore version numbers for conda environment
- RM Fixes to include markdown.util in py2exe

09/15/2016
---------------------------
Released 3.1b27
- RM Refs #719: better fix for moving images to -360 to 180 that handles any projection
- RM Fixed #719: move charts that cross 180E so that they cross 180W instead
- RM Added error check for bad URL when loading project files
- RM Fixed #718: added toggle for depth shading of triangle layer
- RM Fixed #717: removed point and line toolbar items when on triangle layer
- RM Added number of particles to status code display; fixed colors when loading particle file
- RM Added error message flagging layer if it has JSON serialization problems
- RM Fixed #705: added serialization for status code colors and color setting on particle folder
- RM Refs #705: added new info panel and command to change individual status code colors
- RM Fixed #707: added parsing of status code flag meanings
- RM Fixed #716: added unit conversion when merging layers
- RM Fixed #714: fixed mock project method process_command to have all the optional keyword arguments
- RM Added glsvg to list of buildable dependencies not in conda
- RM Added BSB reference file
- RM Updated conda environment to include docutils and markdown
- RM Refs #710: added workaround for UTF-8 locale bug when on OS X and conda
- RM Fixed #704: added selector dialog to load subset of images when opening BSB file
- RM Fixed trait warning by moving event binding after SetValue
- RM Removed debug text from HtmlHelpPane
- RM Fixed #709: added help text sidebars for text formatting modes
- RM Fixed #712: force re-layout of text when size of text box changes
- RM Fixed #713: added check for focused control; if textctrl, copy that text
- RM Refs #710: added RST and Markdown for text formatting
- RM Fixed #708: added new transparent colors for map bounds and spillable area
- RM Refs #704: added BSB parser
- RM Refs #703: added default compass rose and fixed svg renderer for flipped y axis
- RM Refs #703: stub for new compass rose/north-up arrow layer
- RM Fixed particle loading off-by-one error in status codes
- RM Removed channels and duplicate packages listed in pip for the conda environment file
- RM Changed pyinstaller build to use tar + bzip compression instead of zip
- CB added conda requirements and environemnt.yml file
- RM First announced version of pyinstaller build script
- RM Updated version number for pyinstaller generated release
- RM Added more fixes and comments to pyinstaller build script
- RM Added more detailed Info.plist that can't be autogenerated by pyinstaller
- RM Moved installdeps.py to top level
- RM Modified installdeps.py to ignore stuff that's available to install through conda
- RM Updated to pyugrid 2 API
- RM Updates to pyinstaller hooks and initial pyinstaller build script
- RM Extended graticule westward to -360
- RM Fixed #698: wrap tile number for ranges outside -180 - 180 in calls to tile server
- RM Pane layout initial visibily hook move into omnivore
- RM Fix for toolbar names including task id

07/06/2016
---------------------------
Released 3.1b26
- RM Refs #700: added quieter rotation restore; set to 0 if not present to avoid triggering warning message
- RM Fixed #700: added rotation to list of attributes saved via json

07/05/2016
---------------------------
Released 3.1b25
- RM Clarified help text for object rotation
- RM Fixed #697: added lon lines through +360
- RM Refs #687: added experimental code to rotate bounding box after rotation, but needs yet-to-be-written method to inscribe rotated rectangle in another to work correctly
- RM Fixed delete layer bug that didn't remove control point links for deleted layers
- RM Fixed #695: added concept of "locked" control point links that won't be removed during ordinary control point movement
- RM Added context menu to unlink control points
- RM Fixed #694: moved new layer menu items to Layer menu
- RM Fixed #692: fixed off-center and incorrectly scaled marplot icons
- RM Refs #692: added new placeholder category for simple shape icons
- RM Fixed #691: deselect layer before creating image or pdf
- RM Refs #691: fix info panels to handle no selected layer
- RM Fixed #693: added status bar for mouse mode help text
- RM Refs #687: Fixed handling of press/release of Ctrl during rotation or dragging
- RM Refs #687: initial linear transformation support for object rotation
- RM Fixed #690: added calculation for next_invariant on project load
- RM Refs #677: fixed undo/redo for text boxes that wasn't handling the control point links correctly
- RM Refs #677: added OverlayLine object that stays fixed in screen space
- RM Refs #688: removed old reference to pick layer index

06/27/2016
---------------------------
Released 3.1b24
- RM Fixed #689: need to set zoom_level in canvas after layer load
- RM Removed layer_index_base from renderer calls
- RM Removed outdated barely-started experiment with vispy renderer
- RM Fixed #688: changed picker to build a range of colors for objects, generated on the fly
- RM Removed outdated gl_old renderer, untouched for more than a year
- RM Fixed missing import when using New Project
- RM Renamed mouse_mode to mouse_mode_factory in ProjectEditor to keep up with Omnivore
- RM Added check & status display for blank image returned by WMS server
- RM Fixed #684: added save/restore for WMS server
- RM Fixed #685: removed unnecessary encoding of text for json conversion; json expects unicode!

05/19/2016
---------------------------
Released 3.1b23
- RM Updated version to 3.1b23
- RM Added some unit tests for BNA, GDAL & Verdat files
- RM Fixed regression in polygon rendering due to change for #682
- RM Increased unit test coverage for coordinates.py
- RM changed coordinates conversion to raise exceptions; let caller handle it
- RM Fixed #681: added check for currently control so info panel doesn't overwrite user input with validated text
- RM Changed debug prints into log calls
- RM Fixed #682: stopped short-circuiting all drawing when fill type was "no fill"

05/09/2016
---------------------------
Released 3.1b22
- RM Updated version to 3.1b22 in preparation for release
- RM Fixed some imports in unit tests
- RM Fixed #679: ignore projection changes if only vector layers present
- RM Fixed #678: added tile server URL to project file
- RM Refs #680: added simple unit test for layer problem checking
- RM Fixed #680: fixed missing reference to StringIO, added unit test
- RM Updated location of ListReorderDialog for change in omnivore
- RM Added copy support for tile server manager
- RM Added tile server management dialog
- RM Refactored tile and WMS downloaders to use common cache routines
- RM Added management dialog for WMS servers
- RM Moved jsonutil into omnivore
- RM Added more ESRI tile services
- RM Added support for ESRI tile map services
- RM Fixed #675: recursively set visibility when changed
- RM Fixed #676: added missing scale arguments from pdf rendering

03/14/2016
---------------------------
Released 3.1b21
- RM Fixed #674: default to saving as PNG if extension unrecognized
- RM Fixed #673: added slightly more distinguishable icon for arrow/text/icon combo

03/13/2016
---------------------------
Released 3.1b20
- RM Added coverage and pytest-cov to install_requires
- RM Fixed tile downloading to use weakref to store downloader in TileImageData, allowing proper shutdown
- RM Updated version number to 3.1b20
- RM Fixed #656: added arrow/text/icon compound object
- RM Fixed tab/window label when saving with new filename
- RM Fixed #657: fixed resizing of overlay text objects in groups by adding offset for anchor move as well, replacing two calls to adjust bounding box points with one
- RM Fixed #672: Added control point linking on pasted layers
- RM Fixed process_key_char to only hit process_text_input when it's a printable character
- RM Turn off control point rendering when annotation layer isn't selected
- RM Fix for invalid points in pick layer: don't render arrowheads on picking screen
- RM Added bullet list symbol for errors in batch flags to make it clearer when there are multiple errors with lines of text that wrap to the next line
- RM Refs #656: added grouped state to folders to prevent vector objects from being inserted in the middle of groups
- RM Refs #656: Added overlay rendering of arrow text combo object
- RM Refs #656: added compound text/arrow box
- RM Only show annotation layer bounding box if it's the selected layer
- RM Fixed text entry for text vector objects
- RM Fixed insert_json to correctly paste nested folders
- RM Refs #666: added boundary calculation for pasted layers
- RM Added boundary calculation on add_all
- RM Fixed mistake in a9075c7d where mouse mode was getting reset and not allowing control point move
- RM Refs #666: initial support for recursive json generation
- RM Fixed method signature of process_paste_data_object
- RM Moved mouse/ui rule descriptions into mouse_handler
- RM Fixed duplicate layer action attempting to duplicate the root layer
- RM Fixed keypress handling on gl canvas to propagate event if not handled
- RM Fixed #671: Added keypress handling and focus to ScreenCanvas
- RM Added task attribute to MockProject to satisfy test suite
- RM Fixed #669: (again). fixed calculation closed-loop boundary indexes
- RM Added timed messages to progress dialog
- RM Fixed #669: modified boundary checking algorithm to handle multiple closed-loop polygons
- RM Added dummy slow decorator that skips the test when run outside pytest
- RM Changed most_recent_path to most_recent_uri
- RM Refs #662: added shift + move control point to resize about center
- RM vector object layers don't need to check for problems
- RM Updated README to point to download page

03/07/2016
---------------------------
Released 3.1b19
- RM Fixed layer error checking to clear flagged points
- RM Fixed #665: added layer check on save
- RM Fixed #664: reworked control used to enter distance in Merge Points dialog
- RM Simplified menu/toolbar creation using omnivore helper functions
- RM Fixed missing import
- RM Fixed json load/save of layers with null values for points and lines
- RM Fixed layer delete test by calculating bounds on annotation layers
- RM Added children_affected_by_move, parents_affected_by_move stubs to base layer class
- RM Added coverage report to py.test scripts
- RM Fixed missing visibility info when loading project file
- RM Added notification count display for flagged points
- RM Added sidebar to display list of flagged points
- RM Added accelerator for layer error check menu item
- RM Fixed #663: set focus back to layer name field after update
- RM Fixed #667: added Revert Project action
- RM Separated actions out from task.py
- RM Added point/line identification in debug status bar area when mousing over
- RM Allow retriangulation of triangle layer without selecting parent verdat layer first
- RM Added check for layer with find_duplicates before allowing triangulation
- RM Changed flagged point drawing so the highlight are drawn above points, thereby being visible in a large mass of dense points
- RM Only attempt to select layer on rebuild if there is a selected layer (may not be on initial load)
- RM Added pretty printing for maproom json using new collapse_json function
- RM Fixed test mock so that tests in this directory can be run individually from the command line with their __main__ blocks
- RM Fixed project load batch flags error because tree control wasn't properly populated and a layer was selected somehow during load
- RM Fixed incorrect restoring of layer visibility data
- RM Refs #657: added convenience functions to copy points and bounds; saving all points layer data instead of just x & y info in commands to han
- RM Refs #657: Fixed delete layer command to handle bounding box of parents
- RM Refs #657: fixed annotation layer boundary box calculation when adding vector objects
- RM Refs #657: fixed annotation layer bounding box after child object resize
- RM Fixed annotation layer width/height/area display with no objects inside layer
- RM Turned off fill for annotation layer
- RM Refs #656, #657: added first support for grouping and operations on groups of objects
- RM Fixed tree control bug where old root layer could still be returned as the selected tree item after the entire tree had been replaced in reb
- RM Added boundary box computation for folders as accumulation of bounding boxes of immediate children
- RM Added fix in get_layer_children to handle layer with no children
- RM Fixed bounding rect calculation for overlay objects
- RM Converted to py.test; removed nose as a dependency
- RM Fixed #648: added resize handles to icons
- RM Fixed #660: added default layers in WMS host specification
- RM Fixed #658: handle bounding box check when text and background the same color
- RM Added support for navionics tile server
- RM Refs #659: automatically set name of tile layer in tree
- RM Fixed #659: update WMS layer name in layer tree based on selected WMS
- RM Moved OpenLogDirectoryAction to omnivore framework
- RM Fixed toolbar restoration due to the new perspective handling in Omnivore
- RM Updated file loading to sync with new omnivore framework changes
- RM Fixed py2exe error log popup using new routine in omnivore framework
- RM doc fixes
- RM Added nose, pytest to dependent packages
- RM Doc updates
- RM Added some web links in the README
- RM OS X hack to catch DELETE key from menu item when the cursor is in a textctrl

12/21/2015
---------------------------
Released 3.1b18
- RM Fixed polygon vector object drawing to handle convex shapes
- RM Fixed bug that wouldn't restore scale layer because it typically has the invariant 0
- RM Fixed release script to run unit tests and barf if any tests fail
- RM Added hack for merge panel and triangle panel for default buttons responding to Return key even when hidden
- RM Added better check for points layer in merge panel
- RM Fixed reference to MockProject
- RM Fixed old method name in test_tile
- RM Added sample demos for tiles and wms server checking
- RM Added layer name to info panel for WMS, Tile layers
- RM Fixed test_layers because MockProject no longer generates fake layer
- RM Fixed more np.where casts
- RM Fixed MockProject to only supply dummy layer_tree_control when requested
- RM Fixed test_project_save
- RM Fixed import error in test_file_type
- RM Fixed test_zoom and debug prints in base_canvas
- RM Fixed test_layers
- RM Updated test verdat1.mrc to use layer invariants
- RM Fixed np.where cast that is not the same after upgrading to numpy 1.10
- RM Layer visibility now persisted in project file
- RM Fixed particle layer json save/restore

12/18/2015
---------------------------
Released 3.1b17
- RM Fixed paste/duplicate to put new object in center of screen
- RM Added Duplicate Layer command
- RM Fixed position of DefaultStyleAction & preferences to be at end of menu
- RM Added Copy Style/Paste Style menu items
- RM Fix for blank tree control after undocking/redocking.
- RM Added sample particles file with some layers that have zero points
- RM Added minimum size for panes so when undocked they will not be tiny
- RM Handle particle layers with zero points
- RM Updated some debug printing
- RM Fix for bug in control point linking
- RM Fixed save/restore of linked control points
- RM serialize/unserialize control point links with json_extra_data for project save
- RM Fixed extra json data for project file to be dictionary
- RM Updated supported_clipboard_data_objects
- RM Saved files are now added to the recent files list

12/16/2015
---------------------------
Released 3.1b16
- RM Fix for tab name not getting updated when saving as new name
- RM Fixed more layer_manager stale references
- RM Added warnings when loading json save files with missing attributes (e.g. the anchor_point_index recently include in the text vector objects)
- RM Fixed visibility flags when loading new project
- RM Fixed #655: added copy/paste of vector objects
- RM Fixed save that was always overwriting the initial maproom project
- RM Fixed tab name not updating for URI
- RM Use pyfilesystem to open project files
- RM Fixed json serialization error of url for image layers
- RM Fixed anchor point serialization to json
- RM Removed default debug level from textures
- RM Fixed document switching

12/15/2015
---------------------------
Released 3.1b15
- RM Fixed missing layer manager reference when loading image layers from json save file
- RM Omnimon framework renamed to omnivore
- RM updated docs for GEOS shared library
- RM Changed from monolithic get_actions to modular
- RM Fixed #653: added mouse wheel filtering so that it takes multiple wheel events to zoom in/out on OS X
- RM Refs #653: corrected mistake in commit
- RM Refs #653: working fix for mouse wheel, but not optimal. Still too fast.
- RM Reversed order of particle layers so most recent shows up on top
- RM Removed py2exe toolkit dynamic load hack because omnimon doesn't use toolkit abstraction any more
- RM Moved maproom.png out of the way of maproom.ico for search path compatibility in ImageResource on windows
- RM Changed setup.py yet again to exclude reaping numpy .py files during py2app

11/23/2015
---------------------------
Released 3.1b14
- RM Fixed coalesce bug in ParticleColorCommand
- RM Merged change to setup.py to allow numpy tests to be removed from py2app
- RM Fixed #652: added ability to change all dots of a trajectory (or range of trajectories) to a single color
- RM Fixed next_invariant so deserialization works again
- RM Fixed logfile loader to use pyfilesystem and corrected file_metadata serializer to use raw URIs as output
- RM Removed numpy tests and allowed .py to be removed from numpy
- RM Defaults changed in pyface, no need for env var ETS_AUI_TOOLBAR any more
- RM Added circumference, width, height, area to vector object calculations
- RM Significant reduction of py2app size by removing .py and .pyc if .pyo exists
- RM Got rid of UI agnostic code, because there's no way we're ever going to QT so why make it harder?
- RM Added about_application as blank URL so it will still load a blank maproom project on startup
- RM Adding ruler icon that should have been committed with d73306cd
- RM Simplified toolbar creation
- RM Fixed #642: added ruler tool to measure great-circle distance between 2 points
- RM Refs #642: added distance display in mouse_handler when creating vector objects
- RM Fixed #651: fixed rasterization of circle
- RM Fixed #650: corrected circle display (computes distance on earth for radius rather than inscribing circle in lat/lon square
- RM setup.py cleanup to prevent importing of stuff not needed until py2exe/py2app time
- RM Fixed usage of PyOpenGL_accelerate thanks to post by Mike Fletcher on pyopengl mailing list
- RM Updated docs for more streamlined install procedure
- RM Initial support for pyfilesystem for layer loading/saving
- RM Added reference to tile number calculations
- RM Replaced view_of with rebuild_document_properties
- RM Fixed trait change error by moving active_editor.mouse_mode_toolbar change event into activated()
- RM Use Omnimon's popup menu framework
- RM Moved popup context menu data into popup menu itself
- RM Added emply list for actions in CopyPasteGroup now that Omnimon defaults to including them
- RM Added error message dialog resulting from errors in command processing
- RM Subclassed LayerManager from Document

10/25/2015
---------------------------
Released 3.1b13
- RM Renamed menu items for converting to polygon/editable layers
- RM Fix for PDF rendering: tile textures now use same world_rect format
- RM Refs #646, #647: added conversion from polygon to line layer
- RM Fixed incorrect ref to clickable_object_mouse_is_over
- RM Added boundary interface for vector objects
- RM Refs #632: initial support for creating polygon layer from verdat
- RM Removed identical method make_points duplicated from superclass PointBaseLayer
- RM Fixed #645: center point has to be displayed; too many assumptions about center point being last except for polyline/polygon
- RM Fixed #635: completed UI for adding WMS servers
- RM If force_selection_change is True, refresh the info panels even if the layer change count is the same
- RM Mostly working WMS server dialog
- RM Work-in-progress of added user-specified WMS
- RM Changed references of peppy2 framework to omnimon
- RM Fixed debug prints in pdf renderer
- RM Fixed PDF rendering of tile layer
- RM Stubbed out tile functions for PDF rendering
- RM Fixed zoom to rect on tile layers
- RM Updated docs to require brew install of libjpeg before pillow
- RM More error message for tile loading
- RM Added debug printing for tile requests
- RM Added new tile layer to menu
- RM Refs #603: added tile caching on disk
- RM Attempt at constraining circles to be resized with same aspect ratio
- RM Changed --debug-objects to put scale in front of tile layer
- RM Refs #642: added radius to info panel for circle objects
- RM Refs #642: added path length display for lines and polyline objects
- RM Added UI for tile server selection
- RM Fixed mouse wheel zooming; wasn't centered under mouse
- RM Implemented round-robin multi-threaded tile downloader
- RM Clamped tile request x,y to within 0..n-1 range
- RM Fixed intermittent tile request failures by correcting TileRequest superclass
- RM Added separate tile renderer methods rather than trying to shoehorn it into the image renderer
- RM Refs #603: reworked threaded responses for tiles into queue
- RM Fixed swapped rectangle and ellipse in toolbar
- RM Fixed incorrect rendering of circle while creating the object
- RM Refs #642: initial support for adding a circle given its center and radius
- RM Moved get_known_wms into BackgroundWMSDownloader
- RM Refs #643: updated default style
- RM Fixed #644: PolylineObject now subclasses from LineVectorObject
- RM Refs #603: added request algorithm for tiles
- RM Removed some debug prints
- RM Refs #603: first skeleton of tile layer
- RM Start/end markers now available for polyline
- RM Fixed WMS so doesn't download image from server when layer not visible
- RM Fixed PDF rendering after change in ImageData object structure

09/24/2015
---------------------------
Released 3.1b12
- RM Refactored textures.py to put image metadata in a single class
- RM Removed execute bit from test data files
- RM Added polyconic map example
- RM Added some examples of the Lambert Conformal Conic projection
- RM Fixed method name collision in PDF renderer
- RM Fixed draw_screen_lines in PDF renderer
- RM Fixed #534: added scale layer to show legend
- RM Corrected font extent offset error
- RM Changed zooming to be based on Open Street Maps-style zoom levels
- RM Added some pointers to web references
- RM Added most recent path as default for loading new files
- RM Changed order of toolbar so polygon comes right after polyline
- RM Changed SaveLayerGroup to use new TaskDynamicSubmenuGroup superclass
- RM Refs #604: fix for non-strings in WMS layer info

09/15/2015
---------------------------
Released 3.1b11
- RM Refs #604: checks for server id before triggering wms update
- RM Added "+over" to projection string to allow extreme zoom out
- RM Fixed #631: added mouse wheel event handler to redirect events to map
- RM Fixed logger statement misplacement
- RM Fixed several instances of reversed numpy image coordinates
- RM Fixed case of property so raster size & memory used show up again
- RM Added flags to -d command line option
- RM Changed to EPSG:3857 as default projection
- RM Fixed zoom to rect toolbar action
- RM Added print preview to call native OS PDF viewer

09/13/2015
---------------------------
Released 3.1b10
- RM Refs #604: removed some debug printing
- RM Refs #604: added transparency to WMS layers
- RM Refs #604: fixed image problem when switching active layers
- RM Refs #604: fixed race condition in MapOverlayField
- RM Refs #604: added method to remove common prefix from layer titles
- RM Refs #604: fixed popup menu code for OS X
- RM Refs #604: changed from standard WX ids on popup
- RM Refs #604: added context menu to select all/clear overlays
- RM Refs #604: added error message when outside WMS bounding box
- RM Refs #604: fixed download status to display when waiting for download
- RM Refs #604: added map download status and better error checking
- RM Refs #604: changed default layers to be all known layers
- RM Refs #604: added WMSHost class to allow human readable names for WMS sites
- RM Refs #604: added server error reporting & retry
- RM Updated deps to my versions of OWSLib and pyugrid
- RM Refs #604: added overlay selection for WMS
- RM Refs #604: Return blank image on WMS image error
- RM Added some docs & example URLs and capabilities for WMS/WMTS
- RM Refs #604: Initial support for web mercator (projected) bbox
- RM Refs #604: skip checkerboard image when moving/scaling wms layer
- RM Refs #604: initial support for selecting WMS server
- RM Updated readme for WMS, py2exe quirks
- RM Refs #604: added support for paletted images

09/08/2015
---------------------------
Released 3.1b9
- RM Fixed initial zoom of loaded layers
- RM Fixed viewport command zoom & serialization
- RM Changed default color of checkerboard to be less bold
- RM Changed to alpha owslib with support for WMS 1.3.0
- RM Added calc_to_zoom_fit to return zoom params rather than set them
- RM Refs #604: basic error handling for 404 on WMS server
- RM Refs #604: Added set_minimum_delay_callback to trigger UI updates for WMS layer
- RM Changed mod 2 to and 0x1
- RM Refs #604: better algorithm from stack overflow for checkerboard
- RM Refs #604: Added checkerboard to be used as placeholder image
- RM Corrected typo in log message for threaded shutdown
- RM Refs #604: added initial support for background loading of WMS images
- RM Changed starting location to the Seattle region
- RM Refs #628: added debug prints to try to help figure out world to screen mapping problem
- RM Refs #628: added ViewportCommand so changes in zoom or position of map get recorded
- RM Added screen width and height to AddTextCommand
- RM Moved dragged and finished_drag into mouse_handler out of project_editor
- RM Restrict text object resizing to minimum width/height
- RM Fixed param change in refactoring of OffScreenHTML.setup
- RM Removed debug printing for pdf colors
- RM Fixed is_onscreen check to use current viewport, not always projected
- RM Fixed degenerate bitmap width in numpy_images text generation
- RM Refs #75: added line width scale correction
- RM Refs #75: added marker drawing on pdf canvas
- RM Refs #75: added save_as_pdf and path argument to PDFCanvas
- RM Fixed #623: importing rl_settings seems to be all it needed
- RM Refs #75: added rectangle intersection & check for PDF images offscreen
- RM Fixed #627: reportlab.canvas.drawImage uses undocumented keyword mask="auto" to force alpha channel
- RM Refs #627: added some debug printing to try to figure out reportlab transparency
- RM Added PIL image reader for marplot icons, saving some conversion steps
- RM Corrected icon object info panel labels
- RM Refs #75: initial image support
- RM Refs #75: added polygon support
- RM Refs #75: handles no fill/no line in style
- RM Refs #75: fixed line width to use viewport_scale
- RM Refs #75: added stroke/fill colors for objects
- RM Refs #75: added colors to points, lines & text
- RM Refs #75: added label drawing of point depths
- RM Refs #75: added font metrics and draw_screen_string
- RM Refs #75: screen line y axis wasn't reversed
- RM Refs #75: fixed aspect ratio calculations
- RM Refs #75: added point rendering
- RM Fixed #626: added remove/restore for all control points links to layer
- RM Refs #75: added clipping rectangle
- RM Refs #75: added short circuit to skip picking for write-only renderers
- RM Refs #75: added method to copy viewport to pdf canvas for correct scaling
- RM Refs #75: Added default viewport reset function in prep for handling both projected & screen rendering
- RM Refs #604: changed WMS to projected layer
- RM Refs #604: added placeholder layer for WMS support
- RM Refactored image texture centering into renderer
- RM Added screen line rendering for pdfs
- RM Added aspect ratio calculations to pdf
- RM Added first ReportLab code to create a hello world in a pdf
- RM Moved layer visibility check into BaseCanvas.render
- RM Removed capitalization from info panel identifier 2nd & subsequent words
- RM Fixed #622: added editable_properties_changed to Layer and logic to process_command

08/14/2015
---------------------------
Released 3.1b8
- RM Fixed #621: added depth toggle
- RM Fixed problem with cursor location and deleting in text fields
- RM Refs #75: removed renderer attribute from Layer
- RM Refs #75: renamed get_[picker|renderer] to new_*
- RM Refs #75: converted render_projected, rebuild_renderer to take renderer arg
- RM Refs #75: converted render_screen to take renderer arg
- RM Refs #75: converted render_control_points_only to take renderer arg
- RM Refs #75: converted pre_render to take renderer argument
- RM Refs #75: Removed create_renderer as first step to allowing alternate renderers
- RM Stub get_drawn_string_dimensions so blank image can get through mock PDF rendering
- RM Refactored overlay stuff out of BaseCanvas to ScreenCanvas
- RM Fixed #620: switches back to select mode after adding an annotation object
- RM Added common base class for overlay modes
- RM Moved context menu framework into ScreenCanvas

08/13/2015
---------------------------
Released 3.1b7
- RM Added context menu framework to support setting anchor point of text boxes
- RM Fixed #616: Added user selectable anchor point for overlay objects
- RM Renamed info panel field to AnchorCoordinates
- RM Fixed #618: anchor point now set correctly using text box
- RM Refactored projection stuff from LayerCanvas onto BaseCanvas
- RM Changed point delete to delete vector object layer when a vector object is selected
- RM Delete selection on annotation layer objects now deletes the whole layer
- RM Initial stubs for PDF rendering
- RM Moved layer_renderer stuff into BaseCanvas so other subclasses than LayerCanvas can use it
- RM Attribute renaming: layer_control -> layer_canvas, editor -> project
- RM Refactored BaseCanvas into ScreenCanvas and new BaseCanvas class

08/11/2015
---------------------------
Released 3.1b6
- RM Fixed #615: added boundary check on screen point before picker object lookup
- RM Changed default fill color to grey so it would be more easily visible for debugging
- RM Fixed initial style on polygon objects to be filled
- RM Fixed #612: added polygon object for annotation layer
- RM Added debug menu command to add sample annotiation layer objects
- RM field widths and popup widths now class attrs of InfoField
- RM Fixed #613: changed ParticleField combo boxes to custom wx.comboctrl
- RM Fixed #611: changed rendering order of control points
- RM Fixed #614: needed refresh after finishing ObjectSelectionMode drag to update picker buffer
- RM Removed explitic specification of setLevel for loggers
- RM Added debug option to view the picker buffer on screen
- RM Fixed #610: end_index now a big number and clamped on first use
- RM Added AnnotationLayer as parent for --debug-objects
- RM RST changes in README
- RM Simple UI for setting visibility on range of particle layers
- RM Updated install instructions
- RM Removed category hack from LayerTreeControl
- RM Folder visibility change now affects child layers
- RM Added particle layer folders
- RM Added overlay highlight for snapping to point
- RM Changed corner/edge/center control point color to black
- RM Added polyline into debug_objects
- RM Added mid-line control points to vector objects
- RM Added control point linking when dragging endpoint of a line
- RM Fixed undo bug in DrawLineCommand that wasn't removing linked control points
- RM Changed default debug level to INFO unless "-d" command line arg
- RM Fixed control point unlinking when object is moved
- RM Changed linked control points into master/slave only (before, moving either object would affect the other. now, only the master object movement will update the slave)
- RM Force control point drawing in picker for all vector object layers
- RM Changed line and fill colors in default style
- RM Fixes #602: added style dialog
- RM Fixes #601: expand folders in tree control if they are new
- RM Removed old vestigial batch handling from dispatch_event
- RM Fixes #600: added savepoint to project file
- RM Refs #600: added savepoint command to hold zoom rect and selected layer
- RM Added MARPLOT icon dialog
- RM Added width/height calculation to marplot image generator
- RM Added separate text color style
- RM Added text wrapping in overlay text
- RM Fixed redundancy in all the parse_style* methods

07/13/2015
---------------------------
Released 3.1b5
- RM Added border width around text
- RM First cut at overlay text with background
- RM Alpha style changes now undoable in raster images
- RM Changed default overlay line drawing to be red xor rather than dashes
- RM Fixed bug when mouse press and release too close to original point
- RM Use XOR to render polylines as the figure is being drawn
- RM Added MoveLayerCommand so drag and drop of layers now undoable
- RM Now handle undo/redo of DeleteLayerCommand where layer has children
- RM Fixed parent of (currently unused) Batch class
- RM Fixed particle layer rendering
- RM Removed dialog prompt for deleting layers (since undo works now)
- RM Added drop inside folders with new code in customtreecontrol in peppy2
- RM Fixed tree collapsing bug after dragging layer
- RM Changed drop to use before/after state from event rather than item
- RM updated gitignore to skip generated .c files and dist-* directories
- RM First step for improving tree drag/drop support: using new peppy2 customtreectrl
- RM Renamed color_to_int, int_to_color to color_floats_to_int, int_to_color_floats
- RM Fixed vector command creation since lines are the only users of snapped_object
- RM Changed int_to_wx_color_tuple to int_to_color_uint8
- RM Added Icon objects to annotation layer
- RM Added Marplot image resources
- RM Added basic marplot icon object
- RM Initial support for overlay icons
- RM Selected layer is now pickable even if not top in stacking order

06/30/2015
---------------------------
Released 3.1b4
- RM Updated comment for control point links
- RM Support multiple linked control points at the same point
- RM Added linked control points
- RM Fixed name of rectangle vector object
- RM Fixed StyleChangeCommand to coelesce similar style changes
- RM Added separate line and fill alpha
- RM Added plain text formatting for text overlay objects
- RM Fix for serializer to support unicode names in overlay text
- RM Fixed cursor being reset to end of text in OverlayTextField

06/23/2015
---------------------------
Released 3.1b3
- RM Fixup of some debug prints related to GDAL error
- RM Fix for GDAL merc projections when libproj.dll installed on win
- RM Added note about how to use OpenGL tracing for debugging
- RM Fix for OS X rendering: canvas must be made current at each render
- RM Fixes to prevent rendering before OpenGL context initialized
- RM Fix for windows rendering: make sure context is set before gl operations

06/11/2015
---------------------------
Released 3.1b2
- RM Turn on logging by default when using mock project in unit tests
- RM Fixed layer order for project load
- RM Fixed move_control_point before image data is created
- RM Reworked JSON Serialization
- RM Fixes for project save/load
- RM Added first unit test for project save
- RM Moved font enumeration to class method
- RM Removed FloatCanvas support
- RM Added debugging hook to create layers during layer manager creation
- RM Added dirty check & save point to undo stack
- RM Added line width UI
- RM Updated layer change count flag to trigger info panel values update
- RM Added UI for line start/end markers
- RM Changed text names for undo list
- RM Fixed text rendering height calculations
- RM Fixed font name serialization (font names are unicode!)
- RM Fixed default image object for ScaledImageObject
- RM Added font size UI
- RM Actually removed the debug prints
- RM Initial support for fonts in layer styles
- RM Handle multi-line quoted strings in deserializer
- RM Added check for invalid bitmap produced by HTML renderer
- RM Set text focus to OverlayTextField
- RM Added toolbar button to add text overlay
- RM Added font color for overlay text
- RM Added automatic width selection on OffScreenHTML
- RM Added bounding box calculation to OffScreenHTML
- RM Added overlay text object
- RM Used mask trick to change OffScreenHTML text background transparent
- RM Changed OverlayImageObject to use sample marplot image
- RM Fixed picking of OverlayImageObject
- RM Initial support for overlay textures (those that stay stamped on the screen at the same time & don't zoom)
- RM Restored the check for null marker removed in f8ac80822
- RM Reduced spacing in info panels to get more stuff in vertically
- RM Changed to draw list of markers rather than single marker
- RM Initial marker drawing support (still some hardcoded stuff)
- RM Slightly better polyline icon
- RM Added polyline icon
- RM Fixed move_control_point when called during redo
- RM Fixed bounding box calculations when control points moved
- RM Added UI to create polyline objects
- RM Initial support for hatched pattern fill
- RM Changed some debug prints
- RM Fixed bug in StyleChangeCommand undo: must copy style before saving
- RM First support for line styles
- RM Initial support for drawing (not yet editing) polylines
- RM Added convenience function to compute rect of set of points
- RM Added fill styles
- RM Initial image object (scaled, not fixed relative to screen)
- RM Refactored ImageData and ImageTextures
- RM Added picking to draw_images

05/12/2015
---------------------------
Released 3.1b1
- RM Fix for initial slider size on Mac
- RM Forgot to update style color on points layer
- RM Changed line/fill color to LayerStyle object
- RM Setting colors of vector objects become default color for new objects
- RM Changed TextSlider to use SpinCtrlDouble
- RM Moved transparency slider and text entry ctrl on same line
- RM UI toolbar/menu bar changes
- RM Fixed default_insert_layer positioning when folders present
- RM Fixed drag/drop reordering of folder layers
- RM Removed dependent dictionary and now track parent in layer
- RM Corrected bad layer invariants in test data
- RM Fixed vector object insertion so new objects show up on top
- RM Reenabled folder support
- RM Added new annotation layer that's a subclass of Folder
- RM Moved float canvas loading stuff to new file
- RM Added raise to top/lower to bottom actions for layers
- RM Fixed tree drag/drop and raise/lower layers
- RM Fixed bug in ColorField where it was using the fill color instead of line color
- RM Added process_flags back as convenience function for undo/redo processing
- RM Added filled object click detection to change vector object layers
- RM Fixed vector objects to be filled when picker is active
- RM Fixed hard coding of picker index stuff
- RM Removed unused method 'render'
- RM Updated docs; added new references page
- RM Vector object resize handles only displayed when that layer is selected
- RM Renamed layer_control_wx.py to layer_canvas.py
- RM normalized some filenames to use lower case
- RM Moved layer component visibility out of layer selection tree
- RM Added test data file of annotation objects saved as command log
- RM Added BatchStatus.zoom_to_all
- RM Removed debug print
- RM Added process_batch_command to delay UI updates
- RM Added line and ellipse vector object drawing
- RM Added UI to create rectangles
- RM Fixed ZoomRectMode bug introduced in refactoring checkin 288a3e87
- RM Added LineVectorObject and refactored vector object subclasses
- RM Added placeholder for line stippling (no UI yet)
- RM Added fill color
- RM Added transparency to vector object
- RM Added MoveControlPointCommand to resize/reshape vector objects
- RM Changed select.png to be 16x16 and better shading
- RM Added AnnotationLayerToolBar mouse mode & stub classes for control point editing
- RM Added test code to create a few vector objects
- RM Added control point drawing to VectorObjectLayers
- RM Added center point as an additional control point
- RM Initial code for vector object layers
- RM Added File -> New Annotation Layer command
- RM Annotation layer with no objects will now report empty
- RM Added placeholder implementation for spline drawing
- RM Fixed bug in adding new empty ugrid layers
- RM Updated to the more readable FloatCanvas json format
- RM Added brute-force ellipse rasterizer in GLDC
- RM Removed ImageAnnotationLayer, ImageScreenData and other methods used by the image overlay hack for the raster annotation layer concept
- RM Added load support for FloatCanvas json data
- RM Added filled circles and rectangles
- RM Added circle rendering to GLDC
- RM Fixed rectangles (not y-swapped)
- RM Moved GLDC to new file
- RM Added wx.DC API on top of OpenGL to have FloatCanvas draw right into the OpenGL layers
- RM Initial rendering of georeferenced images from FloatCanvas
- RM Initial FloatCanvas drawing in annotation layer
- RM Added initial placeholder for annotation layer
- RM Refactored image and texture loading to combine common code
- RM Removed background processing and threaded job manager
- RM Moved ImageData class into textures & refactored for generic image support
- RM Fixed mouse handling of alt button for pan mode even in other modes
- RM Removed some old debug prints
- RM Moved demo files to tutorial directory
- RM Added simple tests while learning the vispy/gloo OpenGL interface
- RM Added some simple test programs for learning the OpenGL Shader Language
- RM Added simple test grid to show negative depth
- RM Added polygon rendering
- RM cleaned up render importing
- RM Renamed picker module to lowercase
- RM Added triangle rendering
- RM Added debugging for invalid pick index
- RM Fixed set_lines to handle changes in number of lines
- RM Fixed set_points to handle changes in number of points
- RM Fixed return value error in prepare_string_texture_for_labels
- RM Added some OpenGL shader links
- RM Changed to non-threaded loading for images
- RM Added image rendering
- RM Added label rendering
- RM Pulled out font texture generation into base_canvas
- RM Fixed point picking
- RM Fixed texture rendering
- RM Reenabled grid rendering
- RM Fixed picker calling and encapsulated picker constants within Picker itself
- RM Changing from vispy to gl_immediate, first basic working rendering
- RM Changed to use gl constants rather than gloo.set_state
- RM Basic line drawing working
- RM Moved the references to the PICKER_OFFSET nonsense
- RM Test pattern for vispy renderer
- RM First no-op vispy renderer
- RM Refactored legacy OpenGL rendering in preparation for vispy rendering
- RM Removed old MODE_ constants from layer_control_wx

02/09/2015
---------------------------
Released 3.0b22
- RM Now able to restore command logs in non-empty projects
- RM Moved select_layer flag processing below refresh so it isn't cleared
- RM Added slow attribute to tests that take a long time
- RM Fixed boundary unit tests
- RM Fixed nc_particles unit tests
- RM Fixed GDAL loader to only recognize raster files
- RM Fixed file type unit tests
- RM Fixed ugrid unit tests
- RM Commands now store reference to layer (an invariant) rather that the layer object itself
- RM Fixed text conversion of DeleteLinesCommand when only deleting a point
- RM Fixed process_flags that was ignoring the passed-in layers_changed flag
- RM Include default string converter for deserialization
- RM Allow comment and blank lines in command log files
- RM Added menu item to save the command log
- RM Added unit test framework for reading command logs
- RM Initial code for RenameLayerCommand

02/02/2015
---------------------------
Released 3.0b21
- RM Added some basic error handling to command log loading
- RM Use shlex when deserializing log files
- RM Cursor set in event handlers rather than idle event
- RM Improved code of OpenLogDirectoryAction
- RM Added menu command to open log directory in platform file manager

01/29/2015
---------------------------
Released 3.0b20
- RM Updated README to show how to debug py2app build
- RM Fix for OpenLogAction to show log file as text rather that trying to replay it
- RM Fixes for deserialization of degenerate lists
- RM Added CommandLogLoader and ability to replay log files
- RM Added get_layer_by_name convenience function
- RM Added help command to show command file
- RM Command log now automatically saved in the user's log dir
- RM Changed application name to MapRoom
- RM Added short names for serialized commands
- RM Added ArgumentConverters for converting to string for output
- RM Separated serializer into new file
- RM Fixed exception handling bug in TriangulateLayerCommand
- RM Finished conversion to LayerStatus flags
- RM Added LoadLayersCommand
- RM Added simple serializer framework to command processor
- RM Triangulation now undoable
- RM Check for command success before updating undo stack
- RM Fix to allow & character to appear as undo/redo label in menu
- RM Added last_flags to Command to allow status checking after command runs
- RM Changed to layers_changed trait to propagate to other views
- RM Added new menu command AddLayerCommand
- RM Added MergeLayersCommand
- RM Added documentation of command status flags
- RM Fixed offset bug when undoing DeleteLinesCommand
- RM Fixed bug when creating a line segment between existing points
- RM Fixed layer deletion
- RM Attempt to scroll focused control into view
- RM Fixed box sizer alignment
- RM Fixed bug in ColourSelect widget by changing to scrolled panel
- RM Fixes for building 64bit installer using py2exe
- RM Added initial pyinstaller support & windows 64 bit support
- RM Finally removed app_globals
- RM Call peppy2's get_image_path for font path rather than checking for frozen status here

12/15/2014
---------------------------
Released 3.0b19
- RM Reference my version of traits to pick up resource path handling of frozen apps
- RM Added manual install of configobj to work around py2exe bug
- RM Added simple installer for python dependencies checked out by git
- RM Changed all [==|!=] None to [is|is not] None
- RM Added batch inserting for add_layers
- RM Removed some debug prints
- RM Only force ui selection of last layer inserted, not every layer
- RM Fixed point count property in particle layer base class
- RM Removed old import of layer_undo
- RM Fixed bug where initial focus not set to default depth field
- RM Added colors for particle layers based on status codes in the NC file
- RM Added missing baseclass method get_info_panel_text
- RM Fixed #582: added color selector to layer info panel
- RM Refresh to show selections have been cleared after selecting new layer
- RM Fixed point selection function
- RM Added text focus to Point depth field
- RM Added is_displayed to selection pane classes
- RM Mostly complete refactoring of InfoPanels
- RM refs #568: Work-in-progress checkin of InfoPanels rewrite
- RM Fixed Merge Points pane to use command processor
- RM Removed unused reproject_all code left over from old version
- RM Changed process_flags to use events to update all windows viewing the project
- RM Added SplitLineCommand
- RM Added has_selection, has_flagged to base Layer class
- RM Fixed point delete bug
- CB refactored layers to provide a point_base for point layers to derive from
- RM Fixed bug where clicking on point in line mode wouldn't deselect line
- RM Removed check for projection_is_identity
- RM Removed old undo framework
- RM Minor cleanups in particles.py
- CB added some test BNAs for North America and Teh Gulf coast -- helps for seeing if projecitons are working...
- R Fixed hidden layer check; now specify layer instead of bool
- RM Added unit tests for InsertPointCommand and MovePointsCommand
- RM Added hidden_layer_check to undo flags instead of using layer visibility check in mouse_commands
- CB added a list of files in TestData that work and don't work. Needs completion!
- RM Added DeleteLinesCommand
- RM Removed old & unused offset_ methods
- RM Changed to MovePointsCommand in InfoPanels.py
- CB removed projection_is_identity
- RM Added ChangeDepthCommand
- RM Added CropRectCommand
- CB removed a few log messages
- RM Added simple undo history display pane
- RM Removed vestigial file load/save ui routines
- RM Added first cut at InsertLineCommand
- CB re-factored picking to only use the pickable layers.
- CB refactored picking to support "pickable" layers and non-pickable ones -- so space in teh color map only gets used for pickable layers
- RM Moved object selection logic into mouse handlers
- RM Added set_mouse_handler to change mouse mode in update_layer_selection_ui
- RM Changed esc_key_pressed to clear_all_selections
- RM small doc updates
- RM WIP checkin: mouse mode objectification, only PanMode works right now
- CB got particles layer pretty much working. Still a bug if you load too many
- RM Added MovePointsCommand
- CB got particles files working with a points-only renderer.
- RM Added first cut at a roadmap document for new developers
- RM Changed particles to use point layer
- CB added some extra stuff in anticiatpion..
- CB loading multiple tiemsteps as multiple layers, but crashed if too many,
- RM First code for new undo & command processor and refreshing via status flags rather than trait events
- CB first working version of nc_particles loader.
- RM Refactored vector.py into multiple files
- RM Added libgeos shared lib to py2app bundle
- RM Prevent triangulation errors from creating error popups under progress dialog
- RM Removed non-north-up check since we can handle those images now
- RM Added debug print for projected transform in GDAL load: win & others differ
- RM Fixed error reporting bug in load()
- CB added start of loader code -- still need editor, etc, and to tie it all together -- all for nc_paticles
- CB replaced "application/x-hdf" with "application/x-nc_ugrid"
- CB added a HDF-based nc_particles file
- CB added a bunch of tests to test_file_type.
- CB added new file recognizer for UGRID nc files -- and updated sample data.
- CB added identifier for nc_particles, and tests for Ugrid and nc_particles.
- CB added file type identifyer for nc_particles files.

10/26/2014
---------------------------
Released 3.0b18
- RM Added command to select boundary of verdat layers
- RM Fixed missing colors on merged layer
- RM Added non-North-up test image
- RM Fixed #494: now displays grid lines based on preference setting
- RM Fixed #539: image no longer assumed to have axis aligned rectangle bounds

10/23/2014
---------------------------
Released 3.0b17
- RM Fixed bug where deleting points via menu item only worked when in point or line editing mode.
- RM Added command to turn flagged points into selected points
- RM Added optimized renderer rebuild when point coords change but number of points stays the same
- RM Add user preference, when a layer is selected, to hide sublayers of other layers
- RM Clear flagged point when moved
- RM Renamed project editor function to clear_all_flagged
- RM Added menu item to clear flagged points
- RM Added BNA saving
- RM Fixed Polygon layer to store name and feature code from BNA loading
- RM Added Makefile to automatically build generated files (.pyx -> .c, etc)
- RM Removed unnecessary import from loaders
- RM Fixed float64 conversion in triangulation
- RM Updated setup.py to include the GEOS dll in py2exe build

10/17/2014
---------------------------
Released 3.0b16
- RM Moved new layer menu items to File menu
- RM Pane layout configuration is now in one file, maproom/pane_layout.py
- RM Fix for image layers disappearing after BNA clipping
- RM Added undo support for BNA clipping
- RM Multipolygon support for shapely clipping
- RM Changed OpenGL rendering back to float32
- RM Initial conversion to float64
- RM Increased allowable zoom level
- RM Added check for valid polygons in BNA files
- RM Refs #577: added UI for BNA crop to rectangle
- RM Refs #577: added initial BNA clipping
- RM Raise error when attempting to add line segments to polygon layer

09/29/2014
---------------------------
Released 3.0b15
- RM Fixed #578: fixed GLU tessellator's combine_data callback
- RM Triangle meshing now does not generate any new points unless minimum angle is specified

09/08/2014
---------------------------
Released 3.0b14
- RM Clear flagged points when layer check is OK
- RM Fixed #576: handle already removed point in adjacency map
- RM Progress dialog prevented from popping up after OK/Error alert
- RM Beginnings of mouse handler refactoring
- RM Corrected status bar size in BNA loading
- RM Changed BNA loading to use progress dialog
- RM Separate layer loading from layer insertion on file load

08/22/2014
---------------------------
Released 3.0b13
- RM Fixed error when attempting to triangulate a layer without points
- RM Added progress log title when beginning triangulation
- RM Added progress dialog for triangulation
- RM Added progress log updates to the cython code Shape.pyx
- RM Updated progress log calls in Boundary.py
- RM Added progress dialog to Layer -> Check For Errors
- RM Changed save and load loggers into single progess log
- RM Added progress cancel handlers to load/save
- RM Added chart 16003 that shows rendering (or loading?) errors:
- RM Fixed GDALLoader base class and typo in logging message
- RM Added filename to progress dialog title
- RM Added special load/save loggers to display busy cursor and progress
- RM Added depth unit abbreviations and coercing to standard values
- RM Added small test file for duplicate points
- RM Converted merge points dialog into pane
- RM Updated error checking
- RM Allow verdat saving with self-crossing boundary
- RM Added dropdown in Current Layer Info to select flagged points
- RM Instrumented Boundaries.check_errors for time
- RM Refactored boundary checking into classes
- RM Added boundary self-crossing check for verdat files
- RM Fixed bug in save_layer with default layer name
- RM Moved mock objects into separate file mock.py
- RM Fixed ugrid tests for change in loaders API back in 5ed8e20e
- RM Updated layer name in UI when saved to new filename
- RM Added point index display to Current Selection pane
- RM Removed "Selected points" from Current Layer pane
- RM Fixed off-by-one error for point indexes returned by find dialog
- RM Cleaned up some debug prints in project loading/saving
- RM Added Polygon (i.e. BNA) layer json serialization
- RM Fixed mislocated mime type assignment in BNA and GDAL loaders
- RM Self-contained project support for point, line, and triangle layers
- RM First cut at project save files

07/23/2014
---------------------------
Released 3.0b12
- RM Added file dialog wildcard convenience fuction to BaseLoader
- RM Implemented Save Layer As menu item that shows appropriate file formats for the selected layer
- RM Turn off Enthought debug prints by default
- RM Added new logger for mouse actions
- RM Fixed bug when adding verdat point editing over visible portions of BNA layer
- RM Moved background processing library to peppy2
- RM Changed debug prints into log messages

07/09/2014
---------------------------
Released 3.0b11
- RM Initial support for background loading of images
- RM Removed unnecessary numpy array copy when creating textures
- RM Added memory usage to about dialog

07/01/2014
---------------------------
Released 3.0b10
- RM Fixed save_layer when only one valid loader available

07/01/2014
---------------------------
Released 3.0b9
- RM Improved layer save checking
- RM Updated layer loaders to only save for known extensions

07/01/2014
---------------------------
Released 3.0b8
- RM Changed default for delete layer confirmation to YES
- RM Additional fix for PyOpenGL 3.1 in Image_set_renderer
- RM Fixes for PyOpenGL 3.1 and pyopengl-accelerate on linux
- RM Updated ugrid loading for new pyugrid
- RM Removed invalid projection conversion in merge_duplicates
- RM Fixed build scripts for Version.py location

06/20/2014
---------------------------
Released 3.0b7
- RM Added netCDF libraries to py2exe/py2app requirements
- RM Fixed background for triangle panel
- RM Fix TrianglePanel import error
- RM Set default pane visibility
- RM Changed triangulate dialog to a pane
- RM Fixed colormap interp for first depth value
- RM Added linear color interpolation
- RM Initial support for colormapped triangle layer
- RM Added sample files for line layers stored in netcdf files
- RM Added verdat overlay for 11361_4 image chart
- RM Fixed bug in raster loading introduced in 006cd2e0
- RM Added test for saving line layers as netcdf
- RM Added support for saving layers in multiple formats
- RM Added multiple layer loading support
- RM Fixed testRunner imports
- RM Updated string representation of vector layers
- RM Restored check for branches in find_boundaries
- RM Added support for branching boundaries: jetties and channels
- RM Added highlight_exception to layer
- RM Fixed triangle support using new pyugrid that supports depths
- RM Added first cut at ugrid file handler
- RM fixed triangulation for identity projection
- RM Added build instructions for pyugrid and dependencies
- RM Fixed missing imports from save file routine
- RM Select point created after clicking on line in point edit mode
- RM Points deleted from triangle layer now remove connected triangles
- RM Fixed missing triangle layer after deleting and recreating triangulation
- RM Changed get_selected_point_plus_line_point_indexes to get_selected_and_dependent_point_indexes
- RM Fixed layer loader's error checking
- RM Added image loading to new file loading scheme
- RM Added vector layer subclasses and file loading
- RM File type recognizers now their own plugin
- RM Fixed changelog maker to recognize alpha, beta tags

05/17/2014
---------------------------
Released 3.0b6
- RM Remove triangulated layer on failure if it didn't exist before
- RM Added layer removal by specifying layer
- RM Fixed delete selection action so selected lines are able to be deleted
- RM Added menu item to check verdat layer for errors
- RM Depth unit appears as dropdown regardless if points selected
- RM Changed task id to force new window layout
- RM Added 3rd pane to display selection info
- RM New feature: clicking on selected point deselects in point edit mode
- RM Fixed memory leak when deleting layers
- RM Removed reference to triangle set renderer
- RM Changed image alpha label to "Transparency"
- RM Triangles now created as separate layer
- RM Fixed triangle count in properties panel

05/14/2014
---------------------------
Released 3.0b5
- RM Updated version for new beta release
- RM Added image size properties to the info pane
- RM Consolidated image data into new ImageData class
- RM Attempt at reduced memory usage by sharing textures between renderers
- RM Handle degenerate case of loading a zero point verdat file
- RM Separated out save and save_as for enabling menu items
- RM Fixed bug in new line selection
- RM Changed from MessageDialog to task window error method
- RM Lat/Lon layer stays on top when inserting new layers
- RM Open empty project when opening new window
- RM Fixed #551: added warning message when adding points/lines to hidden layer
- RM Fixed #525: flagged points cleared on successful save
- RM Fixed #510: allow endpoint selection when line selected
- RM Fixed #524: depth is now averaged when new point is created on line
- RM Fixed #567: depth value in properties panel now active after adding point
- RM Added refresh option to end_operation_batch
- RM Fixed layer tree control so dragged layer stays selected after drop
- RM Fixed #204: Added alpha channel for images
- RM Fixed sliders to work with non-zero minimum value
- RM Handle illegal float value for slider text input
- RM Set type of new vector layer so it can be saved

05/04/2014
---------------------------
Released 3.0b4
- RM Updated version for new beta
- RM Save layer defaults to its original file name
- RM Fixed relative imports
- RM Removed fake preferences from app_globals
- RM Removed old maproom 1.9x files
- RM Using peppy2/ethought preferences instead of old app_globals stuff
- RM Attached preferences to plugin so they show up in prefs dialog
- RM Removed SMTP login info; now using webbrowser.open to send email
- RM Temporarily disabled SaveProject menu items until it's actually working
- RM Added layer save
- RM Removed mistakenly entered mousewheel event
- RM Changed Save/Save As to Save Project/Save Project As
- RM Fixed mouse wheel scrolling on win

04/30/2014
---------------------------
Released 3.0b3
- RM Updated version
- RM Check that mouse mode still valid after switching layers
- RM Changed display name of Vector Layer to Ugrid Layer
- RM Removed another reference to Source File
- RM Removed unneeded debug print because layer might be None
- RM Using new 2-field status bar; "render complete" messages now in 2nd field
- RM Removed source file from properties panel
- RM Fixed initial layer selection
- RM Layer load now updates recently opened files list
- RM Fixed bug where couldn't add points to a new vector layer
- RM Another fix for unitialized data as a result of 8fc2e0
- RM Set dirty flag, naively, to same state as can_undo

04/29/2014
---------------------------
Released 3.0b2
- RM Updated version for 2nd beta
- RM fixed unitialized data as a result of 8fc2e0
- RM py2exe fixes
- RM Win also needs background color hack, so use it for all platforms
- RM Changed application name to MapRoom (mostly for window titles)

04/28/2014
---------------------------
Released 3.0b1
- RM Updated version to 3.0b1
- RM Fixed background color for properties panel on OS X
- RM Fixed bad relative import
- RM Added error handler from peppy2 framework
- RM Added undo/redo support
- RM Added properties panel
- RM Fixed toolbar enable delay
- RM Fixed point/line delete; was missing trait handler for layer_contents_deleted
- RM Fixed clear selection/delete selection enable state
- RM Added some debug printing
- RM Removed unused class attributes
- RM Fixed incorrect ref to dispatch_event
- RM Added merge duplicate points
- RM Removed unused app_globals import
- RM Added Merge Layers
- RM Refresh tree control when triangulated
- RM Added prompt if the user is loading a non-maproom file
- RM Handle plain integer as well as numpy.uint32 for int_to_color
- RM Added Triangulate Layer
- RM Added Layer -> New menu and ability to add lon/lat grids
- RM Changed error dialogs to use TaskWindow convenience functions
- RM Fixed labels to read "MapRoom" instead of "Maproom"
- RM Workaround for duplicate separator after DeleteLayer
- RM Use new task/window convenience methods of FrameworkEditor
- RM Added DeleteLayer action
- RM Removed OpenLayer; Open now adds layer to current project
- RM Added about dialog
- RM Now using task_factories_from_tasks in plugin
- RM Forgot to return None when GDAL identify failed
- RM Added MaproomProjecTask.new_file_task so maproom projects show up in File/New list
- RM SaveImage now uses the "save as" dialog, which contains built-in check for overwriting file
- RM Use agw.aui toolbar to workaround Mac refresh problem
- RM Added "Save As Image"
- RM Changed visible_name to enabled_name in actions to work around aui toolbar bug when hiding both toolbar items and full toolbars
- RM Fixed space between toolbars when project first loaded
- RM Added checks for active_editor in trait change handlers
- RM Added different toolbars for each type of mouse selection mode
- RM Moved edit mode tools into new toolbar
- RM Changed some edit modes to use visible instead of enabled
- RM Fixed order for gdal image detection

04/10/2014
---------------------------
Released 3.0a4
- RM Version 3.0a4
- RM Added GDAL image recognizer
- RM Fixed other view not updating when moving lines
- RM Added editing rules documentation
- RM fix for icon relocation in setup.py

04/10/2014
---------------------------
Released 3.0a3
- RM 3.0 alpha 3 release
- RM Fixed BNA rendering
- RM Added BNA file recognizer
- RM fixed data_types import
- RM Moved Editor into project_editor_wx
- RM New 16x16 add points/add lines icons
- RM fixed order of toolbar items
- RM Update toolbar ui items when toggle buttons changed
- RM Initial support for point and line editing
- RM Layers now use Traits
- RM Separated out LayerUndo into new file
- RM Added Clear Selection
- RM Added Find Points dialog
- RM Added Jump to Coordinates dialog
- RM added New Vector Layer in ui
- RM Added raise/lower layer
- RM Wait till there's an active project before rebuilding the tree
- RM Maproom icon now appears when the maproom project is active task
- RM Added Zoom functions to menubar/toolbar
- RM Added "show bounding box" ui element
- RM Added first implementation of raster layers
- RM Now rendering layers in order, irrespective of projected or screen objects
- RM Moved logic in create_necessary_renderers into layers
- RM Added visibility items to Layer
- RM Moved lon/lat grid into layer
- RM Refactoring of Layer into layers subdir with separate vector/image subclasses
- RM Moved point/line/etc data types into renderer/gl/data_types.py
- RM Moved color conversion utils into renderer
- RM Renamed Layer_manager.py to layer_manager.py
- RM Restructured library/opengl_renderer to renderer/gl

03/20/2014
---------------------------
Released 3.0a2
- RM Updating version to second alpha! (really pre-pre-pre-pre alpha)
- RM Force maproom to be the initial task
- RM Added Open Layer menu item
- RM Changed default tab name to "Untitled Project"
- RM Changed image path calculation to use new peppy2 convenience function
- RM Removed pubsub from LayerManager and changed to Traits events
- RM Moved selected layer logic out of LayerManager and into the view components
- RM Having problems with PyOpenGL_accelerate, so removed it from prerequisites
- RM Added default width to LayerSelectionPane
- RM Pulled layer visibility out of Layer and into ProjectEditor
- RM Layer manager of new view must point to same layer manager
- RM Assume root note is always expanded
- RM Added the tree control to the LayerSelectionPane
- RM Added ability to open new view of a maproom project
- RM Removed circular references for [Layer|LayerManager].destroy
- RM Removed app_globals from Layer
- RM Removed XML verdat format
- RM Removed app_globals from Layer_manager.py
- RM Removed app_globals from Editor.py
- RM Moved RenderController functions into project_editor_wx
- RM Added an ERMA package to test data (both zipped and unzipped)
- RM Removing distutils/command files from py2app bundle
- RM Prevent render if not shown on screen
- RM Call new peppy2.framework.application.run function for startup

02/21/2014
---------------------------
Released 3.0a1
- RM Stripping out useless binary stuff from site-packages.zip in py2app
- RM Additional includes/excludes fixes for py2app
- RM Fix for loading images resources in py2app frozen file
- RM Updated includes for py2exe/py2app freezing
- RM Added new start script based on peppy2 framework
- RM Only try py2exe/py2app stuff if actually using py2exe or py2app
- RM Zoom to fit layer after loading a new layer
- RM Renamed the maproom3 layer editor to "project editor"
- RM Added simple status bar display
- RM OpenGL renderer must be created before update_renderers
- RM Major directory restructuring for Enthought/peppy2 framework
- RM Changed name of mac zipped bundle from Maproom-rX.Y.Z to Maproom-X.Y.Z
- RM Fixed #565: added wheel event to top level frame & tree for windows
- RM Changed setup.py so that mac and win are both buildable from same directory
- RM Removed svn versioning stuff from setup.py
- RM Speeded up BNA loading by only updating progress every 1000 points loaded
- RM Added line number when BNA error found during load
- RM Fixed #566: incorrect number of return values on bad BNA
- RM Fixed incorrect number of return values on bad BNA
- RM Menu items can't be enabled on linux till after they're added to the menu
- RM Added linux support for pytriangle
- RM Fixed #565: win needs keyboard focus on renderer for mouse wheel to work
- RM Fixed #562: added try/except around file load
- RM Fixed #560: added check for valid layer to fix find dialog crash
- RM Fixed #563: fixed outdated reference in Save As Image
- RM Allow user to copy error text and send email manually if auto sending fails
- RM Added new error handler
- RM Refs #550: following advice for wxPython 2.9.x, static box sizer children now children of box sizer instead of frame
- RM Added missing constants for Windows/MinGW compilation
- RM Removed redundant copy of pytriangle source files
- RM Refs #550: updated about dialog to show versions
- RM Refs #555: dialogs now have a wx.Frame as a parent
- RM Fixed #558: About menu item now only appears on app menu
- RM Fixed #547: disabled Add Folder UI until folders are implemented
- RM Fixed #554: check for bad item when dropping layer in layer tree
- RM Fixed #557: Added layer bounding box drawing
- RM Fixed #556: lat/log grid menu item now references state stored in RenderWindow
- RM Fixed #511: layer boundary now updated after adding each point
- RM Fixed #527: added flush method to Logger object for py2app std[out|err]
- RM Fixed #532: added integer range parsing to Find Point dialog
- RM Fixed #548: added point selection count to properties panel
- RM Added convenience function to put debug messages in correct status bar location
- RM [Fixed #515]: added new layer count
- RM Fixed #509: changed menu item text to New Grid Layer
- RM Refs #546: radio button images only allowed on Mac
- RM Fixed #516: removed extra dialog and placed info message in save dialog
- RM Refs #138: added call to MacOpenFile with workaround for wx 2.9
- RM Fixed #544: created split status bar
- RM Refs #545: refactor to pull out Frame init from MapController into MapFrame class
- RM Fixed #543: added a call to Center() which correctly adjusts for the dock position
- RM Fixed #529: added point number to status text display on mouse motion
- RM Added is_ugrid_point convenience function to Editor
- RM Fixed #530: menu item enabled only when layer has points
- RM Minor refoctor of Layer to separate out method to create new points
- RM Refs #530: added check for layer with no points
- RM Refs #530: added basic functionality to search for a point
- RM Fixed #526: (again). handle whitespace in to/from conversion to dms
- RM Fixed #542: moved Preferences menu item to app menu only on OSX

01/14/2014
---------------------------
Released 1.9.11
- RM Fixed #565: added wheel event to top level frame & tree for windows
- RM Changed setup.py so that mac and win are both buildable from same directory
- RM Removed svn versioning stuff from setup.py

01/13/2014
---------------------------
Released 1.9.10
- RM Speeded up BNA loading by only updating progress every 1000 points loaded
- RM Added line number when BNA error found during load
- RM Fixed #566: incorrect number of return values on bad BNA
- RM Fixed incorrect number of return values on bad BNA
- RM Menu items can't be enabled on linux till after they're added to the menu
- RM Added linux support for pytriangle
- RM Fixed #565: win needs keyboard focus on renderer for mouse wheel to work

01/06/2014
---------------------------
Released 1.9.9
- RM Fixed #562: added try/except around file load
- RM Fixed #560: added check for valid layer to fix find dialog crash
- RM Fixed #563: fixed outdated reference in Save As Image

12/09/2013
---------------------------
Released 1.9.8
- RM Allow user to copy error text and send email manually if auto sending fails
- RM Added new error handler
- RM Refs #550: following advice for wxPython 2.9.x, static box sizer children now children of box sizer instead of frame
- RM Added missing constants for Windows/MinGW compilation
- RM Removed redundant copy of pytriangle source files
- RM Refs #550: updated about dialog to show versions
- RM Refs #555: dialogs now have a wx.Frame as a parent
- RM Fixed #558: About menu item now only appears on app menu

11/22/2013
---------------------------
Released 1.9.7
- RM Fixed #547: disabled Add Folder UI until folders are implemented
- RM Fixed #554: check for bad item when dropping layer in layer tree
- RM Fixed #557: Added layer bounding box drawing
- RM Fixed #556: lat/log grid menu item now references state stored in RenderWindow
- RM Fixed #511: layer boundary now updated after adding each point

11/22/2013
---------------------------
Released 1.9.6
- RM Fixed #527: added flush method to Logger object for py2app std[out|err]
- RM Fixed #532: added integer range parsing to Find Point dialog
- RM Fixed #548: added point selection count to properties panel
- RM Added convenience function to put debug messages in correct status bar location
- RM [Fixed #515]: added new layer count
- RM Fixed #509: changed menu item text to New Grid Layer
- RM Refs #546: radio button images only allowed on Mac
- RM Fixed #516: removed extra dialog and placed info message in save dialog
- RM Refs #138: added call to MacOpenFile with workaround for wx 2.9
- RM Fixed #544: created split status bar
- RM Refs #545: refactor to pull out Frame init from MapController into MapFrame class
- RM Fixed #543: added a call to Center() which correctly adjusts for the dock position

11/06/2013
---------------------------
Released 1.9.5
- RM Fixed #529: added point number to status text display on mouse motion
- RM Added is_ugrid_point convenience function to Editor
- RM Fixed #530: menu item enabled only when layer has points
- RM Minor refoctor of Layer to separate out method to create new points
- RM Refs #530: added check for layer with no points
- RM Refs #530: added basic functionality to search for a point
- RM Fixed #526: (again). handle whitespace in to/from conversion to dms
- RM Fixed #542: moved Preferences menu item to app menu only on OSX

10/31/2013
---------------------------
Released 1.9.4
- RM Fixed #536: added recent files list to file menu
- RM Added scripts to automatically create/tag new versions and app bundle
- RM Fixed #528: Quit menu item now only appears on app menu
- RM Fixed whitespace to (largely) conform to PEP8
- RM Refs #526: updated test case for degrees/minutes/seconds
- RM Fixed #526: removed extra whitespace between components
- CB Updated README for TestData, and added some netcdf particle files.
- CB added a README for the sampple data

8/4/2013
---------------------------
- KO Fixed #507 (change projection dialog shouldn't open)

7/31/2013
---------------------------
- KO Fixed #465 (Zooming in with scroll wheel should center)
- KO Fixed #517 (new layers don't have properties panel)
- KO Restored the ability to select all files in dialogs (fixes #481 and #488)

7/27/2013
---------------------------
- KO Added support for loading tif images via GDAL (#488)
- KO Added support for zooming to a specific layer (#142)
- KO Switched the version to 1.9.x since we can't rely on a simple revision number any longer.
- KO Changed selected points and lines to drawing last to make them more visible (#495)
- KO Added the ability to check a verdat layer for errors (#438)
- KO Moved verdat format logic into its own class in library.formats

7/26/2013
---------------------------
- KO Added coordinate conversions to decimal degrees
- KO Added test suite for coordinates module
- KO Added the ability to view / edit point coordinates (#418)
- KO Implemented Jump to Coordinates (#505, #157)
- KO Fixed #479 (should be able to save a verdat with no boundaries)
- KO Fixed #475 (Should be able to create a new verdat from scratch)

7/25/2013
---------------------------
- KO Fixed XML layer loading bug (#481)
- KO Fixed error dialog incompatibility with 2.9.4.0
- KO Fixed error when triangulating on Windows in the exe version (#484)
- KO Fixed error when calling Zoom to Fit (#502)
- KO Fixed undo error after layer code refactoring (#504)

5/9/2013
---------------------------
- KO Fixed an issue introduced by the use of Projection class by adding a __call__ method
- KO Added testRunner.py to run all unit tests, along with RenderWindow unit tests

5/8/2013
---------------------------
- KO Renamed Transformer class to Projection and added projection function to fully wrap pyproj

5/3/2013
---------------------------
- KO Fixed an issue with how Layer_maanger detects raster and vector layers

5/2/2013
---------------------------
- KO Added setup.cfg so that `python setup_library.py install` installs to the correct dir.
- KO Changed line editing mode to allow point selection when shift is held down

4/14/2013
---------------------------
- KO Refactored layer rendering logic into a new class LayerRendererOpenGL
- KO Fixed #471 (Enable MapRoom to Edit Soundings in a .VERDAT)

4/12/2013
---------------------------
- KO Refactored the logic for creating map elements from Application.py into MapController.py
- KO Refactored, and when possible removed, some layering violations caused by app_global references
- KO Changed modeless dialogs so that they are always destroyed when closed, or raised if opened
- KO Changed Layer_manager's layers to be instance-specific, rather than a static global
- KO Added File -> New Map to allow MapRoom to open multiple maps in one session

4/11/2013
---------------------------
- KO fixed #501 ("Merge Duplicate Points" Dialog Doesn't Find Duplicate Points)
- KO Changed the layer colors to match the colors used by Dan's build.
- KO Restored the properties panel behavior when selecting points to match Dan's build.

4/4/2013
---------------------------
- KO fixed #474 (Change zoom-on-scroll rate)
- KO fixed #497, for real this time :)
- KO fixed #500 (Can't Open More Than 1 Instance of MapRoom) on Windows

3/29/2013
---------------------------
- KO fixed #499 (MapRoom.exe Process Hangs After Crash Report Attempt)
- KO Fixed #498 (Deleting "...Tolerance for Duplicate Points" Values Crashes MapRoom)
- KO Fixed #497 (Manual Entries in "...Tolerance for Duplicate Points" Dialogs Don't Update Display)
- KO Fixed #496 (Merge Duplicate Points dialog too big) by removing static boxes
- KO Fixed #492 (Unable to Resize "Merge Duplicate Points" Window After Clicking "Find Duplicates")
- KO Fixed #452 (Need be able to identify duplicate points regardless of how different the depths are.)
- KO Fixed #367 (Duplicate point finder should support searching for duplicates without a depth tolerance)
- KO Changed Merge Duplicate Points UI to disable depth slider if depth isn't used

2/24/2013
---------------------------
- KO Changed log file deletion so that it will gracefully handle deletion failures


2/17/2013
---------------------------
- KO Changed setup.py on Windows to explicitly include .pyd files that py2exe seems not to detect

2/10/2013
---------------------------
- KO Changed the log file location to go somewhere the app always has write access to
- KO Changed setup.py to always delete the previous build first and include wx.lib.pubsub
- KO Fixed #493 (Unable to adjust "Depth Tolerance Chceck [sic] for Duplicate Points" Values)
- KO Fixed #452 (PyDeadObject errors when opening Merge Duplicate Points dialog multiple times)
- KO Fixed #482 (Hard to select a point with a line segment)

1/20/2013
---------------------------
- KO Fixed #487 (Save Image)
- KO Marked #437 (Allow loading a verdat with no boundaries) as fixed
- KO Marked #156 (Preference setting to change format of lat/long display) as fixed
- KO Changed save behavior to save to existing file rather than prompting
- KO Fixed #470 (Label Positions Relative to Soundings Overlap (Sometimes...))

1/19/2013
---------------------------
- KO Fixed #478 (verdat deleted when save fails)
- KO Fixed #480 (Selected points should be highlighted)
